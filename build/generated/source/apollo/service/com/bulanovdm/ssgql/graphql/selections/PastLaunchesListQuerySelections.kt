//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.5.0'.
//
package com.bulanovdm.ssgql.graphql.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.bulanovdm.ssgql.graphql.type.Date
import com.bulanovdm.ssgql.graphql.type.GraphQLID
import com.bulanovdm.ssgql.graphql.type.GraphQLString
import com.bulanovdm.ssgql.graphql.type.Launch
import com.bulanovdm.ssgql.graphql.type.LaunchLinks
import com.bulanovdm.ssgql.graphql.type.LaunchRocket
import kotlin.collections.List

public object PastLaunchesListQuerySelections {
  private val __links: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "flickr_images",
          type = GraphQLString.type.list()
        ).build(),
        CompiledField.Builder(
          name = "mission_patch_small",
          type = GraphQLString.type
        ).build()
      )

  private val __rocket: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "rocket_name",
          type = GraphQLString.type
        ).build()
      )

  private val __launchesPast: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type
        ).build(),
        CompiledField.Builder(
          name = "mission_id",
          type = GraphQLString.type.list()
        ).build(),
        CompiledField.Builder(
          name = "links",
          type = LaunchLinks.type
        ).selections(__links)
        .build(),
        CompiledField.Builder(
          name = "rocket",
          type = LaunchRocket.type
        ).selections(__rocket)
        .build(),
        CompiledField.Builder(
          name = "launch_date_utc",
          type = Date.type
        ).build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "launchesPast",
          type = Launch.type.list()
        ).arguments(listOf(
          CompiledArgument.Builder("limit", CompiledVariable("limit")).build()
        ))
        .selections(__launchesPast)
        .build()
      )
}
