//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.5.0'.
//
package com.bulanovdm.ssgql.graphql.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.bulanovdm.ssgql.graphql.LaunchDetailsQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object LaunchDetailsQuery_ResponseAdapter {
  public object Data : Adapter<LaunchDetailsQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("launch")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LaunchDetailsQuery.Data {
      var _launch: LaunchDetailsQuery.Launch? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _launch = Launch.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LaunchDetailsQuery.Data(
        launch = _launch
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LaunchDetailsQuery.Data,
    ): Unit {
      writer.name("launch")
      Launch.obj().nullable().toJson(writer, customScalarAdapters, value.launch)
    }
  }

  public object Launch : Adapter<LaunchDetailsQuery.Launch> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "mission_name", "details", "links")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LaunchDetailsQuery.Launch {
      var _id: String? = null
      var _mission_name: String? = null
      var _details: String? = null
      var _links: LaunchDetailsQuery.Links? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _mission_name = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _details = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _links = Links.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LaunchDetailsQuery.Launch(
        id = _id,
        mission_name = _mission_name,
        details = _details,
        links = _links
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LaunchDetailsQuery.Launch,
    ): Unit {
      writer.name("id")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("mission_name")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.mission_name)

      writer.name("details")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.details)

      writer.name("links")
      Links.obj().nullable().toJson(writer, customScalarAdapters, value.links)
    }
  }

  public object Links : Adapter<LaunchDetailsQuery.Links> {
    public val RESPONSE_NAMES: List<String> = listOf("flickr_images", "mission_patch")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        LaunchDetailsQuery.Links {
      var _flickr_images: List<String?>? = null
      var _mission_patch: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _flickr_images = NullableStringAdapter.list().nullable().fromJson(reader,
              customScalarAdapters)
          1 -> _mission_patch = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return LaunchDetailsQuery.Links(
        flickr_images = _flickr_images,
        mission_patch = _mission_patch
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: LaunchDetailsQuery.Links,
    ): Unit {
      writer.name("flickr_images")
      NullableStringAdapter.list().nullable().toJson(writer, customScalarAdapters,
          value.flickr_images)

      writer.name("mission_patch")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.mission_patch)
    }
  }
}
